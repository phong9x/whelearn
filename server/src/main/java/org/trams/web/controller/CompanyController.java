/*
 * Created on 26 thg 9 2016 ( Time 11:55:01 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.web.controller;

import java.util.List;
import java.util.ArrayList;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import org.springframework.web.bind.annotation.ModelAttribute;


//--- Common classes
import org.trams.web.common.AbstractController;
import org.trams.web.common.Pager;
import org.trams.web.common.utils.FileUtils;
import org.trams.web.common.Login;
import org.trams.bean.jpa.CompanyEntity;

//--- Entities
import org.trams.bean.Company;

//--- Services 
import org.trams.business.service.CompanyService;

/**
 * Spring MVC controller for 'Company' management.
 */
@Controller
@RequestMapping("/company")
public class CompanyController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "company";

	private static final Integer PAGE_SIZE   = 10;

	private static String nav = "company";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_CREATE   = "company/create";
	private static final String JSP_LIST   = "company/list";
	private static final String JSP_EDIT   = "company/edit";
	private static final String JSP_DETAIL   = "company/detail";
	private static final String JSP_LOGIN   = "redirect:/login";
	private static final String MAIN_LIST_NAME   = "list";
	//--- Main entity service
	@Resource
    private CompanyService companyService; // Injected by Spring
	@Resource
    private ServletContext servletContext;
	//--- Other service(s)

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public CompanyController() {
		super(CompanyController.class, MAIN_ENTITY_NAME );
		log("CompanyController created.");
	}

	@RequestMapping("/list")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="type",defaultValue="") String type,
			@RequestParam(value="key",defaultValue="") String key,
			@RequestParam(value="delete",defaultValue="0") Integer delete,
			HttpSession session,
			Model model) {
		if(key==null){
			key="";
		}
		if(delete>0){
			try {
				companyService.delete(delete);
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
		Page<CompanyEntity> listPage = null;
		if(type == null){
			listPage = companyService.listPaging(page, PAGE_SIZE);
		}
		model.addAttribute(MAIN_LIST_NAME, listPage);	
		model.addAttribute("key", key);
		model.addAttribute("type", type);
		model.addAttribute("activePage", nav);
		model.addAttribute("pagination_navigator", "/company/list");
		new Pager<CompanyEntity>(listPage).setSetting(model, "type="+type+"&amp;key="+key+"&amp;");		
		return JSP_LIST;
	}

	
	@RequestMapping("/detail/{id}")
	public String detail(
	Model model, 
	HttpSession session,
	@PathVariable("id") Integer id) {
		Company company = companyService.findById(id);
		model.addAttribute("company", company);
		model.addAttribute("activePage", nav);
		return JSP_DETAIL;
	}
	@RequestMapping(value = "/create", method = RequestMethod.GET ) 
	public String create(
			HttpSession session,
			Model model) {
		log("Action 'create'");
		model.addAttribute("activePage", nav);
		return JSP_CREATE;
	}

	@RequestMapping(value = "/create", method = RequestMethod.POST ) 
	public String create(
			HttpSession session,
			@ModelAttribute Company company,
			Model model) {
		log("Action 'create'");
		try {
			companyService.create(company);
			return "redirect:/"+JSP_LIST;
		} catch(Exception e) {
			System.out.println(e);
			return JSP_CREATE;
		}
	}

	@RequestMapping(value = "/delete", method = RequestMethod.GET)
	public String delete(
	Model model  ) {
		try {
			List<Company> list = companyService.findAll();
			Company c =new Company();
			if(list.size() > 0){
				for (Company company : list) {
					companyService.delete(company.getId());
				}
				
			}
			model.addAttribute("item", c);
			model.addAttribute("activePage", nav);
			return "redirect:/"+JSP_EDIT;
		} catch(Exception e) {
			return "redirect:/"+JSP_EDIT;
		}
	}
	
	@RequestMapping(value = "/edit", method = RequestMethod.GET)
	public String update(
	HttpServletRequest req,
	HttpSession session,
	Model model  ) {
		try {
			List<Company> list = companyService.findAll();
			Company c =new Company();
			if(list.size() > 0){
				 c = list.get(0);
			}
			model.addAttribute("item", c);
			model.addAttribute("activePage", nav);
			return JSP_EDIT;
		} catch(Exception e) {
			return JSP_LIST;
		}
	}
	
	@RequestMapping(value = "/edit", method = RequestMethod.POST)
	public String update(
	@RequestParam(value="edit",defaultValue="0") Integer edit,
	@ModelAttribute Company item,
	@RequestParam(value ="file") MultipartFile file,
	HttpSession session,
	HttpServletResponse res,
	HttpServletRequest req,
	Model model  ) {
		try {
			List<Company> list = companyService.findAll();
			Company company =new Company();
			if(list.size() > 0){
				company = list.get(0);
			}
			if(file.getSize() >0){
				String path = FileUtils.saveFileOrigin(file,"upload", servletContext);
				company.setImageName(file.getOriginalFilename());
				company.setImageUrl(path);
			}
			if(company.getId() == null){
				company = companyService.create(company);
			}else{
				company = companyService.update(company);
			}
			
			model.addAttribute("item", company);
		} catch(Exception e) {
			System.out.println(e);
		}
		return "redirect:/"+JSP_EDIT;
	}
	
	

	@RequestMapping(value = "/delete/{id}")
	public String delete(
	Model model, 
	HttpSession session,
	@PathVariable("id") Integer id ) {
	companyService.delete(id);
	return "redirect:/"+JSP_LIST;
	}

}
