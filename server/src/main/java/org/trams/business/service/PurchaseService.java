/*
 * Created on 23 thg 8 2016 ( Time 16:20:08 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.business.service;

import java.util.List;

import org.springframework.data.domain.Page;
import org.trams.bean.CalculateItem;
import org.trams.bean.Purchase;
import org.trams.bean.jpa.PurchaseEntity;

/**
 * Business Service Interface for entity Purchase.
 */
public interface PurchaseService { 

	/**
	 * Loads an entity from the database using its Primary Key
	 * @param id
	 * @return entity
	 */
	Purchase findById( Integer id  ) ;

	/** 
	 * Loads all entities.
	 * @return all entities
	 */
	List<Purchase> findAll();
	
	/**
	 * Loads entities in page number.
	 * @return entities
	 */

	Page<PurchaseEntity> findAll(Integer page);

	/**
	 * Count all entities
	 * @return Long
	 */
	Long countTotal();
	

	/**
	 * Saves the given entity in the database (create or update)
	 * @param entity
	 * @return entity
	 */
	Purchase save(Purchase entity);

	/**
	 * Updates the given entity in the database
	 * @param entity
	 * @return
	 */
	Purchase update(Purchase entity);

	/**
	 * Creates the given entity in the database
	 * @param entity
	 * @return
	 */
	Purchase create(Purchase entity);
	
	/**
	 * Deletes an entity using its Primary Key
	 * @param id
	 */
	void delete( Integer id );

	Page<PurchaseEntity> listPaging(Integer page,Integer size);
	
	Page<PurchaseEntity> findByFullname(String fullname, Integer page, Integer size);

	void update_isDelete(Integer id);

	Page<PurchaseEntity> findByProgramTitle(String fullname, Integer page, Integer size);
	
	List<CalculateItem> listMemberJoinProgram(Integer id);

	List<PurchaseEntity> findByUserId(Integer userId, Integer page, Integer size);
	
	Page<PurchaseEntity> listPagingByUserId(Integer userId,Integer page, Integer size);
	
	Page<PurchaseEntity> findByProgramTitleAndUserId(String fullname,Integer userId, Integer page, Integer size);
		
	Long totalMoneyPaidByProgramId(Integer programId);
		
	Page<PurchaseEntity> listPagingByUserIdAndProgramId(Integer userId, Integer programId, Integer page, Integer size);
	
	Page<PurchaseEntity> findByProgramTitleAndUserIdAndProgramId(String fullname,Integer userId, Integer page, Integer size);
	
	void updateRefundEndday();
	
	List<PurchaseEntity> findByUserIdAndProgramId(Integer userId, Integer programId);
	

	PurchaseEntity findOne(Integer id);

	Purchase findByTid( String tid  ) ;

}
