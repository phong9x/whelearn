/*
 * Created on 31 thg 10 2016 ( Time 13:26:38 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.bean.jpa;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "user"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="user", catalog="whelearn" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UserEntity.countAll", query="SELECT COUNT(x) FROM UserEntity x" )
} )
public class UserEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="password", nullable=false, length=100)
    private String     password     ;

    @Column(name="nickname", nullable=false, length=200)
    private String     nickname     ;

    @Column(name="fullname", length=255)
    private String     fullname     ;

    @Column(name="gender")
    private Short      gender       ;

    @Temporal(TemporalType.DATE)
    @Column(name="day_of_birth")
    private Date       dayOfBirth   ;

    @Column(name="phone", length=200)
    private String     phone        ;

    @Column(name="email", length=255)
    private String     email        ;

    @Column(name="address", length=500)
    private String     address      ;

    @Column(name="role")
    private Integer    role         ;

    @Column(name="active")
    private Integer    active       ;

    @Column(name="type")
    private Integer    type         ;

    @Column(name="token", length=300)
    private String     token        ;

    @Column(name="fcm_token", length=500)
    private String     fcmToken     ;

    @Column(name="push_fcm_token")
    private Integer    pushFcmToken ;

    @Column(name="is_delete")
    private Integer    isDelete     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date")
    private Date       updateDate   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=ProgramViewEntity.class)
    private List<ProgramViewEntity> listOfProgramView;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=PurchaseEntity.class)
    private List<PurchaseEntity> listOfPurchase;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=CommentEntity.class)
    private List<CommentEntity> listOfComment;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=ProgramEntity.class)
    private List<ProgramEntity> listOfProgram;

	@JsonIgnore
    @OneToMany(mappedBy="user", targetEntity=ProgramRegisterEntity.class)
    private List<ProgramRegisterEntity> listOfProgramRegister;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UserEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : nickname ( VARCHAR ) 
    public void setNickname( String nickname ) {
        this.nickname = nickname;
    }
    public String getNickname() {
        return this.nickname;
    }

    //--- DATABASE MAPPING : fullname ( VARCHAR ) 
    public void setFullname( String fullname ) {
        this.fullname = fullname;
    }
    public String getFullname() {
        return this.fullname;
    }

    //--- DATABASE MAPPING : gender ( SMALLINT ) 
    public void setGender( Short gender ) {
        this.gender = gender;
    }
    public Short getGender() {
        return this.gender;
    }

    //--- DATABASE MAPPING : day_of_birth ( DATE ) 
    public void setDayOfBirth( Date dayOfBirth ) {
        this.dayOfBirth = dayOfBirth;
    }
    public Date getDayOfBirth() {
        return this.dayOfBirth;
    }

    //--- DATABASE MAPPING : phone ( VARCHAR ) 
    public void setPhone( String phone ) {
        this.phone = phone;
    }
    public String getPhone() {
        return this.phone;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : address ( VARCHAR ) 
    public void setAddress( String address ) {
        this.address = address;
    }
    public String getAddress() {
        return this.address;
    }

    //--- DATABASE MAPPING : role ( INT ) 
    public void setRole( Integer role ) {
        this.role = role;
    }
    public Integer getRole() {
        return this.role;
    }

    //--- DATABASE MAPPING : active ( INT ) 
    public void setActive( Integer active ) {
        this.active = active;
    }
    public Integer getActive() {
        return this.active;
    }

    //--- DATABASE MAPPING : type ( INT ) 
    public void setType( Integer type ) {
        this.type = type;
    }
    public Integer getType() {
        return this.type;
    }

    //--- DATABASE MAPPING : token ( VARCHAR ) 
    public void setToken( String token ) {
        this.token = token;
    }
    public String getToken() {
        return this.token;
    }

    //--- DATABASE MAPPING : fcm_token ( VARCHAR ) 
    public void setFcmToken( String fcmToken ) {
        this.fcmToken = fcmToken;
    }
    public String getFcmToken() {
        return this.fcmToken;
    }

    //--- DATABASE MAPPING : push_fcm_token ( INT ) 
    public void setPushFcmToken( Integer pushFcmToken ) {
        this.pushFcmToken = pushFcmToken;
    }
    public Integer getPushFcmToken() {
        return this.pushFcmToken;
    }

    //--- DATABASE MAPPING : is_delete ( INT ) 
    public void setIsDelete( Integer isDelete ) {
        this.isDelete = isDelete;
    }
    public Integer getIsDelete() {
        return this.isDelete;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : update_date ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfProgramView( List<ProgramViewEntity> listOfProgramView ) {
        this.listOfProgramView = listOfProgramView;
    }
    public List<ProgramViewEntity> getListOfProgramView() {
        return this.listOfProgramView;
    }

    public void setListOfPurchase( List<PurchaseEntity> listOfPurchase ) {
        this.listOfPurchase = listOfPurchase;
    }
    public List<PurchaseEntity> getListOfPurchase() {
        return this.listOfPurchase;
    }

    public void setListOfComment( List<CommentEntity> listOfComment ) {
        this.listOfComment = listOfComment;
    }
    public List<CommentEntity> getListOfComment() {
        return this.listOfComment;
    }

    public void setListOfProgram( List<ProgramEntity> listOfProgram ) {
        this.listOfProgram = listOfProgram;
    }
    public List<ProgramEntity> getListOfProgram() {
        return this.listOfProgram;
    }

    public void setListOfProgramRegister( List<ProgramRegisterEntity> listOfProgramRegister ) {
        this.listOfProgramRegister = listOfProgramRegister;
    }
    public List<ProgramRegisterEntity> getListOfProgramRegister() {
        return this.listOfProgramRegister;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(password);
        sb.append("|");
        sb.append(nickname);
        sb.append("|");
        sb.append(fullname);
        sb.append("|");
        sb.append(gender);
        sb.append("|");
        sb.append(dayOfBirth);
        sb.append("|");
        sb.append(phone);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(address);
        sb.append("|");
        sb.append(role);
        sb.append("|");
        sb.append(active);
        sb.append("|");
        sb.append(type);
        sb.append("|");
        sb.append(token);
        sb.append("|");
        sb.append(fcmToken);
        sb.append("|");
        sb.append(pushFcmToken);
        sb.append("|");
        sb.append(isDelete);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        return sb.toString(); 
    } 

}
