## #set( $tools = $loader.newInstance("Tools") )
#set( $uncapitalizedEntityName = $fn.uncapitalize($entity.name) )
## --- Primary Key arguments by getters, e.g. "review.getCustomerCode(), review.getBookId()"
#set( $pkElementsGetters = $fn.argumentsListWithGetter($uncapitalizedEntityName, $entity.keyAttributes) )
## --- Primary Key arguments, e.g. "customerCode, bookId"
#set( $pkElementsVariables = $fn.argumentsList($entity.keyAttributes) )
## --- Primary Key request path, e.g. "{customerCode}/{bookId}"
#set( $pkPath = "" )
#foreach( $attribute in $entity.keyAttributes )
#if( $foreach.count > 1 )
#set( $pkPath = "${pkPath}/" )
#end
#set( $pkPath = "${pkPath}{${attribute.name}}" )
#end
## --- Primary Key Path Variables, e.g. "@PathVariable("customerCode") String customerCode, @PathVariable("bookId") Integer bookId"
#set( $pkPathVariables = "" )
#foreach( $attribute in $entity.keyAttributes )
#if( $foreach.count > 1 )
#set( $pkPathVariables = "${pkPathVariables}, " )
#end
#set( $pkPathVariables = "${pkPathVariables}@PathVariable(${QUOT}${attribute.name}${QUOT}) $attribute.type $attribute.name" )
#end
## // ${DOLLAR}pkPath          = "$pkPath"
## // ${DOLLAR}pkPathVariables = "$pkPathVariables"
##
## --- Referenced entities (e.g. "Book", "Country", "Author", ... )
## #set( $referencedEntities = $tools.referencedEntityTypes($entity, $entity.attributes) )## All referenced entities (PK and NON PK)
## #set( $referencedNonPKEntities = $tools.referencedEntityTypes($entity, $entity.nonKeyAttributes) )## Entities referenced by NON PK fields
#set( $referencedEntities = $entity.referencedEntityTypes() )## All referenced entities (PK and NON PK)
#set( $referencedNonPKEntities = $entity.referencedEntityTypes($entity.nonKeyAttributes) )## Entities referenced by NON PK fields
#set($userLowerCase = "")
#set($userUpperCase = "")
#foreach( $field in $selectedEntities)
#set( $uncapitalizedEntityName = $fn.uncapitalize($field.name) )
#if( ${uncapitalizedEntityName} == "user" || ${uncapitalizedEntityName} == "users" || ${uncapitalizedEntityName} == "member" || ${uncapitalizedEntityName} == "members")
#set($userLowerCase = $uncapitalizedEntityName)
#set($userUpperCase = $field.name)
#end
#end
## -----------------------------------------------------------------------------------------------------------------------------
/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
package ${target.javaPackageFromFolder($SRC)};


import java.util.List;
import java.util.ArrayList;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

//--- Common classes
import ${ROOT_PKG}.web.common.AbstractController;
import ${ROOT_PKG}.web.common.Pager;
import ${ROOT_PKG}.web.common.Login;
//--- Entities
#if( $userLowerCase != "" )
import ${ENTITY_PKG}.${userUpperCase};
import ${ENTITY_PKG}.jpa.${userUpperCase}Entity;
import ${ROOT_PKG}.business.service.${userUpperCase}Service;
#end

#if( $userLowerCase != "" )
//--- Services 
	import ${ROOT_PKG}.business.service.${userUpperCase}Service;
#end



@Controller
@RequestMapping("admin")
public class MainAdminController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "main";
	private static final String MAIN_LIST_NAME = "list";

	private static final Integer PAGE_SIZE   = 10;

	private static String nav = "main";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_INDEX   = "";
	private static final String JSP_LOGIN   = "redirect:/login";

	//--- Main entity service
#if( $userLowerCase != "" )
	@Resource
    private ${userUpperCase}Service ${userLowerCase}Service; // Injected by Spring
#end
	public MainAdminController() {
		super(MainAdminController.class, MAIN_ENTITY_NAME );
		log("EatController created.");
	}

	
	
	@RequestMapping(value="/login",method=RequestMethod.GET)
	public String login(Model model, HttpSession session) {
			return "login";	
		}
	
	@RequestMapping("/logout")
	public String logout(Model model, HttpSession session) {
			Login.removeUserLogin(session);
			return "redirect:/login";	
		}
	
	
	@RequestMapping(value={"","/","index","/index"})
	public String index(
			Model model,HttpSession session) {
			return JSP_INDEX;
	}

}
