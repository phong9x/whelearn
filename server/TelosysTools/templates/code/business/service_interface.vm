## Data fields = fields not in Primary Key and not in selected Links    
#set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.NOT_IN_SELECTED_LINKS ) )
/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
package ${target.javaPackageFromFolder(${SRC})};

import java.util.List;
import ${ENTITY_PKG}.jpa.${entity.name}Entity;
import ${ENTITY_PKG}.${entity.name};
import org.springframework.data.domain.Page;

/**
 * Business Service Interface for entity ${entity.name}.
 */
public interface ${entity.name}Service { 

	/**
	 * Loads an entity from the database using its Primary Key
#foreach( $attribute in $entity.keyAttributes )
	 * @param $attribute.name
#end
	 * @return entity
	 */
	${entity.name} findById( $fn.argumentsListWithType($entity.keyAttributes)  ) ;

	/** 
	 * Loads all entities.
	 * @return all entities
	 */
	List<${entity.name}> findAll();
	
	/**
	 * Loads entities in page number.
	 * @return entities
	 */

	Page<${entity.name}Entity> findAll(Integer page);

	/**
	 * Count all entities
	 * @return Long
	 */
	Long countTotal();
	

	/**
	 * Saves the given entity in the database (create or update)
	 * @param entity
	 * @return entity
	 */
	${entity.name} save(${entity.name} entity);

	/**
	 * Updates the given entity in the database
	 * @param entity
	 * @return
	 */
	${entity.name} update(${entity.name} entity);

	/**
	 * Creates the given entity in the database
	 * @param entity
	 * @return
	 */
	${entity.name} create(${entity.name} entity);
	
	/**
	 * Deletes an entity using its Primary Key
#foreach( $attribute in $entity.keyAttributes )
	 * @param $attribute.name
#end
	 */
	void delete( $fn.argumentsListWithType($entity.keyAttributes) );

	Page<${entity.name}Entity> listPaging(Integer page,Integer size);
	
#foreach( $field in $dataFields )
#if( $field.formattedName(0) == "isDelete" )
	void update_isDelete(Integer id);

#end
#if( $field.formattedName(0) == "userId" )
	Page<${entity.name}Entity> listPagingByUserId( Integer page, Integer size, Integer userId);

#end
#if(  $field.formattedName(0) == "name" ||  $field.formattedName(0) == "title" || $field.formattedName(0) == "username" 
|| $field.formattedName(0) == "fullname" || $field.formattedName(0) == "nickname" || $field.formattedName(0) == "email")
	Page<${entity.name}Entity> findBy$fn.capitalize($field.formattedName(0))(String $field.formattedName(0), Integer page, Integer size);

#end
#end
#set( $uncapitalizedEntityName = $fn.uncapitalize($entity.name) )
#if( ${uncapitalizedEntityName} == "user" || ${uncapitalizedEntityName} == "users" || ${uncapitalizedEntityName} == "member" || ${uncapitalizedEntityName} == "members")
	${entity.name} login(String username, String password);
#end


}
