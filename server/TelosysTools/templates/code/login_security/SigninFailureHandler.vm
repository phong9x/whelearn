package ${ROOT_PKG}.security;
import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler;

public class SigninFailureHandler extends SimpleUrlAuthenticationFailureHandler {

     public static String DEFAULT_TARGET_PARAMETER = "spring-security-redirect-login-failure";
     private String targetUrlParameter = DEFAULT_TARGET_PARAMETER;
     public String getTargetUrlParameter() {
          return targetUrlParameter;
     }

     public void setTargetUrlParameter(String targetUrlParameter) {
          this.targetUrlParameter = targetUrlParameter;
     }
     @Override
     public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) throws IOException, ServletException {
          String accept = request.getHeader("accept");
          String message = "Login error!";
          if( StringUtils.indexOf(accept, "html") > -1 ) {
               String redirectUrl = request.getHeader("Referer");
               System.out.println("redirectUrl: "+ redirectUrl);
               if (redirectUrl != null) {
                    super.logger.debug("Found redirect URL: " + redirectUrl);
                    getRedirectStrategy().sendRedirect(request, response, redirectUrl);
               } else {
                    super.onAuthenticationFailure(request, response, exception);
               }

          } else if( StringUtils.indexOf(accept, "xml") > -1 ) {
               response.setContentType("application/xml");
               response.setCharacterEncoding("utf-8");

               String data = StringUtils.join(new String[] {
            		   "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                       "<response>",
                       "<data>null</data>",
                       "<message>"+message+"</message>",
                       "<status>100</status>",
                       "</response>"
               });
               PrintWriter out = response.getWriter();
               out.print(data);
               out.flush();
               out.close();
          } else {
               response.setContentType("application/json");
               response.setCharacterEncoding("utf-8");

               String data = StringUtils.join(new String[] {
            		   "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                       "<response>",
                       "<data>null</data>",
                       "<message>"+message+"</message>",
                       "<status>100</status>",
                       "</response>"
               });
               PrintWriter out = response.getWriter();
               out.print(data);
               out.flush();
               out.close();

          }
     }
}